{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react_folder\\\\homepage-react\\\\src\\\\common\\\\Gsap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport gsap from 'gsap';\n// import { useGSAP } from '@gsap/react';\n// gsap.registerPlugin(useGSAP);\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(ScrollTrigger);\nconst Gsap = () => {\n  _s();\n  // const { contextSafe } = useGSAP();\n  // const spin = contextSafe(({ currentTarget }) => {\n  //     gsap.to(currentTarget, { rotation: \"+=90\", repeat: 1, x: 100, duration: 1, ease: 'elastic.out' });\n  //     gsap.to(currentTarget, { rotation: \"+=360\", x: 100, duration: 1 });\n  //     gsap.to(currentTarget, { rotation: \"+=360\", x: 100, duration: 1 });\n  //     gsap.from(currentTarget, { rotation: \"-=360\", });\n  // });\n  // tl = gsap\n  //     .timeline({\n  //         scrollTrigger: {\n  //             trigger: \"#textSection\",\n  //             start: \"top top\",\n  //             end: \"+=150%\",\n  //             pin: true,\n  //             scrub: 0.75,\n  //             markers: true\n  //         }\n  //     })\n  useEffect(() => {\n    // GSAP ScrollTrigger animation for text color change\n    gsap.to('.scroll-text', {\n      scrollTrigger: {\n        trigger: '.scroll-text',\n        // Element to trigger on scroll\n        start: 'top 80%',\n        // Start when the top of the element reaches 80% of the viewport height\n        end: 'bottom 20%',\n        // End when the bottom of the element reaches 20% of the viewport height\n        scrub: true,\n        // Smooth animation as you scroll\n        markers: false // Optional: Set to true to show markers for debugging (can remove in production)\n      },\n      color: 'yellow',\n      // The color to change to when the scroll trigger is active\n      duration: 1 // Duration of the color change (optional)\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-12 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-inter font-semibold text-4xl text-black text-center pb-9\",\n        children: \"Gsap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box bg-black max-w-[100px] h-20 flex justify-center items-center rounded mx-auto text-white\",\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-medium max-w-[600px] mx-auto scroll-text\",\n          children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus deleniti praesentium veritatis. Perspiciatis sint molestias et corrupti, quasi provident earum!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Gsap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Gsap;\nexport default Gsap;\nvar _c;\n$RefreshReg$(_c, \"Gsap\");","map":{"version":3,"names":["React","useEffect","gsap","ScrollTrigger","jsxDEV","_jsxDEV","registerPlugin","Gsap","_s","to","scrollTrigger","trigger","start","end","scrub","markers","color","duration","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react_folder/homepage-react/src/common/Gsap.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport gsap from 'gsap'\r\n// import { useGSAP } from '@gsap/react';\r\n// gsap.registerPlugin(useGSAP);\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst Gsap = () => {\r\n    // const { contextSafe } = useGSAP();\r\n    // const spin = contextSafe(({ currentTarget }) => {\r\n    //     gsap.to(currentTarget, { rotation: \"+=90\", repeat: 1, x: 100, duration: 1, ease: 'elastic.out' });\r\n    //     gsap.to(currentTarget, { rotation: \"+=360\", x: 100, duration: 1 });\r\n    //     gsap.to(currentTarget, { rotation: \"+=360\", x: 100, duration: 1 });\r\n    //     gsap.from(currentTarget, { rotation: \"-=360\", });\r\n    // });\r\n    // tl = gsap\r\n    //     .timeline({\r\n    //         scrollTrigger: {\r\n    //             trigger: \"#textSection\",\r\n    //             start: \"top top\",\r\n    //             end: \"+=150%\",\r\n    //             pin: true,\r\n    //             scrub: 0.75,\r\n    //             markers: true\r\n    //         }\r\n    //     })\r\n    useEffect(() => {\r\n        // GSAP ScrollTrigger animation for text color change\r\n        gsap.to('.scroll-text', {\r\n            scrollTrigger: {\r\n                trigger: '.scroll-text',  // Element to trigger on scroll\r\n                start: 'top 80%',          // Start when the top of the element reaches 80% of the viewport height\r\n                end: 'bottom 20%',         // End when the bottom of the element reaches 20% of the viewport height\r\n                scrub: true,               // Smooth animation as you scroll\r\n                markers: false             // Optional: Set to true to show markers for debugging (can remove in production)\r\n            },\r\n            color: 'yellow',  // The color to change to when the scroll trigger is active\r\n            duration: 1        // Duration of the color change (optional)\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className='py-12 overflow-hidden'>\r\n            <div className='container'>\r\n                <h3 className='font-inter font-semibold text-4xl text-black text-center pb-9'>Gsap</h3>\r\n                <div className=\"box bg-black max-w-[100px] h-20 flex justify-center items-center rounded mx-auto text-white\">Click me\r\n                </div>\r\n                <div>\r\n                    <p className=\"text-2xl font-medium max-w-[600px] mx-auto scroll-text\">\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus deleniti praesentium veritatis. Perspiciatis sint molestias et corrupti, quasi provident earum!\r\n                    </p> </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gsap\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,MAAM;AACvB;AACA;AACA,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnDH,IAAI,CAACI,cAAc,CAACH,aAAa,CAAC;AAElC,MAAMI,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAP,SAAS,CAAC,MAAM;IACZ;IACAC,IAAI,CAACO,EAAE,CAAC,cAAc,EAAE;MACpBC,aAAa,EAAE;QACXC,OAAO,EAAE,cAAc;QAAG;QAC1BC,KAAK,EAAE,SAAS;QAAW;QAC3BC,GAAG,EAAE,YAAY;QAAU;QAC3BC,KAAK,EAAE,IAAI;QAAgB;QAC3BC,OAAO,EAAE,KAAK,CAAa;MAC/B,CAAC;MACDC,KAAK,EAAE,QAAQ;MAAG;MAClBC,QAAQ,EAAE,CAAC,CAAQ;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAKa,SAAS,EAAC,uBAAuB;IAAAC,QAAA,eAClCd,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBd,OAAA;QAAIa,SAAS,EAAC,+DAA+D;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvFlB,OAAA;QAAKa,SAAS,EAAC,6FAA6F;QAAAC,QAAA,EAAC;MAC7G;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAGa,SAAS,EAAC,wDAAwD;UAAAC,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAf,EAAA,CA/CKD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAiDV,eAAeA,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}