{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react_folder\\\\homepage-react\\\\src\\\\common\\\\CounterPractice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterPractice = () => {\n  _s();\n  const [name, setName] = useState('rajni');\n  const toggleName = () => {\n    setName(name => name === 'rajni' ? 'dikhsa' : 'rajni');\n  };\n  // const [number, setNumber] = useState(false);\n  const [setS, setIntervel] = useState('rajni');\n  useEffect(() => {\n    // Start an interval to update the seconds state every 1000ms (1 second)\n    const interval = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n    }, 1000);\n\n    // Cleanup function to clear the interval when the component unmounts\n    // return () => {\n    //   clearInterval(interval);\n    // };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-inter font-semibold text-4xl text-black text-center pb-9\",\n        children: \"Counter Practice \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center \",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-black opacity-60\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleName,\n          className: \"font-medium text-lg bg-blue p-2 rounded mt-3\",\n          children: \"Toggle Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center \",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-black opacity-60\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Timer: \", seconds, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(CounterPractice, \"FBjeNQUIvkPpfCC3eV4JU+kCszI=\");\n_c = CounterPractice;\nexport default CounterPractice;\nvar _c;\n$RefreshReg$(_c, \"CounterPractice\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CounterPractice","_s","name","setName","toggleName","setS","setIntervel","interval","setInterval","setSeconds","prevSeconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","number","seconds","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react_folder/homepage-react/src/common/CounterPractice.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react'\r\n\r\nconst CounterPractice = () => {\r\n  const [name, setName] = useState('rajni');\r\n  const toggleName = () => {\r\n    setName(name => (name === 'rajni' ? 'dikhsa' : 'rajni'));\r\n  };\r\n  // const [number, setNumber] = useState(false);\r\n  const [setS, setIntervel] = useState('rajni');\r\n  useEffect(() => {\r\n    // Start an interval to update the seconds state every 1000ms (1 second)\r\n    const interval = setInterval(() => {\r\n      setSeconds((prevSeconds) => prevSeconds + 1);\r\n    }, 1000);\r\n\r\n    // Cleanup function to clear the interval when the component unmounts\r\n    // return () => {\r\n    //   clearInterval(interval);\r\n    // };\r\n  }, []);\r\n  return (\r\n    <div className='py-12'>\r\n      <div className='container'>\r\n        <h3 className='font-inter font-semibold text-4xl text-black text-center pb-9'>Counter Practice </h3>\r\n        {/* use state      */}\r\n        <div className='text-center '>\r\n          <p className='text-lg text-black opacity-60'>{name}</p>\r\n          <button onClick={toggleName} className='font-medium text-lg bg-blue p-2 rounded mt-3'>Toggle Button</button>\r\n        </div>\r\n\r\n        {/* use effect  */}\r\n        <div className='text-center '>\r\n          <p className='text-lg text-black opacity-60'>{number}</p>\r\n          {/* <button onClick={() => {\r\n            setTimeout(() => {\r\n              setNumber(number => (number==='1'? '10':''));\r\n            },1000);\r\n          }} className='font-medium text-lg bg-blue p-2 rounded mt-3'>Button</button> */}\r\n        </div>\r\n      </div>\r\n      <h1>Timer: {seconds} seconds</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CounterPractice\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBD,OAAO,CAACD,IAAI,IAAKA,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,OAAQ,CAAC;EAC1D,CAAC;EACD;EACA,MAAM,CAACG,IAAI,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EAC7CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCC,UAAU,CAAEC,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;IAC9C,CAAC,EAAE,IAAI,CAAC;;IAER;IACA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,oBACEX,OAAA;IAAKY,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBb,OAAA;MAAKY,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBb,OAAA;QAAIY,SAAS,EAAC,+DAA+D;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpGjB,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3Bb,OAAA;UAAGY,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAAEV;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvDjB,OAAA;UAAQkB,OAAO,EAAEb,UAAW;UAACO,SAAS,EAAC,8CAA8C;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzG,CAAC,eAGNjB,OAAA;QAAKY,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3Bb,OAAA;UAAGY,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAAEM;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjB,OAAA;MAAAa,QAAA,GAAI,SAAO,EAACO,OAAO,EAAC,UAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV,CAAC;AAAAf,EAAA,CAzCKD,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AA2CrB,eAAeA,eAAe;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}