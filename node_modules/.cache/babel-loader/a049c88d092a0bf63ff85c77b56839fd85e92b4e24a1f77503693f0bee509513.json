{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react_folder\\\\homepage-react\\\\src\\\\common\\\\FormValidation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormValidation = () => {\n  _s();\n  const formData = {\n    Name: \"\",\n    Email: \"\",\n    Password: \"\",\n    ConfirmPassword: \"\"\n  };\n  const [formValue, setFormValidation] = useState(formData);\n  const [errors, setErrors] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target; // Get the name and value from the input field\n  //   setFormValidation((prevFormValue) => ({\n  //     ...prevFormValue,\n  //     [name]: value, // Update the correct field dynamically based on the name\n  //   }));\n  // };\n\n  const handleClick = e => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!formValue.Name) {\n      newErrors.Name = \"Name is required\";\n    }\n    if (!formValue.Email) {\n      newErrors.Email = \"Email is required\";\n    }\n    if (!formValue.Password) {\n      newErrors.Password = \"Password is required\";\n    }\n    if (formValue.Password !== formValue.ConfirmPassword) {\n      newErrors.ConfirmPassword = \"Passwords do not match\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-inter font-semibold text-4xl text-black text-center pb-9\",\n        children: \"Form Validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick,\n        action: \"\",\n        className: \"flex flex-col justify-center items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setFormValidation({\n            ...formValue,\n            formValue,\n            Name: e.target.value\n          }),\n          value: formValue.Name,\n          type: \"text\",\n          placeholder: \"Name\",\n          className: \"border border-black p-2 w-96 outline-none rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          className: \"border border-black p-2 w-96 outline-none rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          className: \"border border-black p-2 w-96 outline-none rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Confirm Password\",\n          className: \"border border-black p-2 w-96 outline-none rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mx-auto\",\n        children: \"btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(FormValidation, \"ggBIAofyk7v/0BuR1t7L24mLAig=\");\n_c = FormValidation;\nexport default FormValidation;\nvar _c;\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormValidation","_s","formData","Name","Email","Password","ConfirmPassword","formValue","setFormValidation","errors","setErrors","name","email","password","confirmPassword","handleClick","e","preventDefault","newErrors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","action","onChange","target","value","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react_folder/homepage-react/src/common/FormValidation.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst FormValidation = () => {\r\n  const formData = {\r\n    Name: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword:\"\",\r\n  }\r\n  const [formValue, setFormValidation] = useState(formData)\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target; // Get the name and value from the input field\r\n  //   setFormValidation((prevFormValue) => ({\r\n  //     ...prevFormValue,\r\n  //     [name]: value, // Update the correct field dynamically based on the name\r\n  //   }));\r\n  // };\r\n  \r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    const newErrors = {};\r\n    if (!formValue.Name) {\r\n      newErrors.Name = \"Name is required\";\r\n    }\r\n    if (!formValue.Email) {\r\n      newErrors.Email = \"Email is required\";\r\n    }\r\n    if (!formValue.Password) {\r\n      newErrors.Password = \"Password is required\";\r\n    }\r\n    if (formValue.Password !== formValue.ConfirmPassword) {\r\n      newErrors.ConfirmPassword = \"Passwords do not match\";\r\n    }\r\n  }\r\n  return (\r\n    <div className='py-12'>\r\n      <div className='container'>\r\n        <h3 className='font-inter font-semibold text-4xl text-black text-center pb-9'>Form Validation</h3>\r\n        <form onSubmit={handleClick} action=\"\" className='flex flex-col justify-center items-center gap-3'>\r\n          <input onChange={(e)=>setFormValidation({...formValue,formValue,Name:e.target.value})} value={formValue.Name} type=\"text\" placeholder='Name' className='border border-black p-2 w-96 outline-none rounded' />\r\n          {errors.name && <div className=\"text-red-500\">{errors.name}</div>}\r\n          <input type=\"text\" placeholder='Email' className='border border-black p-2 w-96 outline-none rounded' />\r\n          {errors.email && <div className=\"text-red-500\">{errors.email}</div>}\r\n          <input type=\"text\" placeholder='Password' className='border border-black p-2 w-96 outline-none rounded' />\r\n          {errors.password && <div className=\"text-red-500\">{errors.password}</div>}\r\n          <input type=\"text\" placeholder='Confirm Password' className='border border-black p-2 w-96 outline-none rounded' />\r\n          {errors.confirmPassword && <div className=\"text-red-500\">{errors.confirmPassword}</div>}\r\n        </form>\r\n        <button type='submit' className='mx-auto'>btn</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormValidation\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}