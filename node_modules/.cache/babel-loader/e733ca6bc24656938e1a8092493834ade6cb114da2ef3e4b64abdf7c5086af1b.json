{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react_folder\\\\homepage-react\\\\src\\\\common\\\\TextAnimation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport gsap from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(ScrollTrigger);\nconst TextAnimation = () => {\n  _s();\n  useEffect(() => {\n    const text = document.querySelector('.animated-text');\n    const letters = text.textContent.split('');\n    text.innerHTML = letters.map(letter => `<span>${letter}</span>`).join('');\n    gsap.fromTo('.animated-text span', {\n      color: 'black'\n    }, {\n      color: 'blue yellow',\n      duration: 0.5,\n      stagger: 0.1,\n      repeat: -1,\n      delay: 5,\n      onRepeat: function () {\n        // Change color to next in sequence after each repeat\n        gsap.to('.animated-text span', {\n          color: (i, target) => {\n            const currentColor = target.style.color;\n            if (currentColor === 'rgb(0, 0, 255)') {\n              // blue\n              return 'yellow';\n            } else if (currentColor === 'rgb(255, 255, 0)') {\n              // yellow\n              return 'green';\n            } else {\n              return 'blue'; // green -> blue cycle restart\n            }\n          },\n          duration: 0.5,\n          stagger: 0.1\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    const text = document.querySelector('.animated-text1');\n    const letters = text.textContent.split('');\n    text.innerHTML = letters.map(letter => `<span>${letter}</span>`).join('');\n    gsap.fromTo('.animated-text1', {\n      color: 'black'\n    }, {\n      color: 'red',\n      duration: 6,\n      stagger: 0.1,\n      repeat: -1,\n      yoyo: true\n    });\n    ScrollTrigger.create({\n      trigger: '.animated-text1',\n      start: 'top top',\n      end: '+=-10',\n      pin: true,\n      pinSpacing: false\n    });\n  }, []);\n  useEffect(() => {\n    gsap.fromTo('.animated-text', {\n      x: '100%',\n      opacity: 0\n    }, {\n      x: 0,\n      opacity: 1,\n      duration: 6,\n      ease: 'power3.out',\n      repeat: 0\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-5xl text-black font-medium text-center animated-text1\",\n      children: \"TextAnimation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-4xl text-black max-w-[650px] text-center mx-auto pt-5 animated-text\",\n      children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n};\n_s(TextAnimation, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n_c = TextAnimation;\nexport default TextAnimation;\nvar _c;\n$RefreshReg$(_c, \"TextAnimation\");","map":{"version":3,"names":["React","useEffect","gsap","ScrollTrigger","jsxDEV","_jsxDEV","registerPlugin","TextAnimation","_s","text","document","querySelector","letters","textContent","split","innerHTML","map","letter","join","fromTo","color","duration","stagger","repeat","delay","onRepeat","to","i","target","currentColor","style","yoyo","create","trigger","start","end","pin","pinSpacing","x","opacity","ease","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react_folder/homepage-react/src/common/TextAnimation.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport gsap from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nconst TextAnimation = () => {\r\n    useEffect(() => {\r\n        const text = document.querySelector('.animated-text');\r\n        const letters = text.textContent.split('');\r\n        text.innerHTML = letters.map(letter => `<span>${letter}</span>`).join('');\r\n\r\n        gsap.fromTo(\r\n            '.animated-text span',\r\n            { color: 'black' }, \r\n            {\r\n                color: 'blue yellow',   \r\n                duration: 0.5,    \r\n                stagger: 0.1,     \r\n                repeat: -1,\r\n                delay: 5,\r\n                onRepeat: function () {\r\n                    // Change color to next in sequence after each repeat\r\n                    gsap.to('.animated-text span', {\r\n                        color: (i, target) => {\r\n                            const currentColor = target.style.color;\r\n                            if (currentColor === 'rgb(0, 0, 255)') { // blue\r\n                                return 'yellow';\r\n                            } else if (currentColor === 'rgb(255, 255, 0)') { // yellow\r\n                                return 'green';\r\n                            } else {\r\n                                return 'blue'; // green -> blue cycle restart\r\n                            }\r\n                        },\r\n                        duration: 0.5,\r\n                        stagger: 0.1,\r\n                    });\r\n                }\r\n                \r\n            },\r\n        );\r\n    }, []);\r\n    useEffect(() => {\r\n        const text = document.querySelector('.animated-text1');\r\n        const letters = text.textContent.split('');\r\n        text.innerHTML = letters.map(letter => `<span>${letter}</span>`).join('');\r\n        gsap.fromTo(\r\n            '.animated-text1',\r\n            { color: 'black' },  \r\n            {\r\n                color: 'red',  \r\n                duration: 6,     \r\n                stagger: 0.1,      \r\n                repeat: -1,\r\n                yoyo: true, \r\n            },\r\n        );\r\n        ScrollTrigger.create({\r\n            trigger: '.animated-text1', \r\n            start: 'top top',            \r\n            end: '+=-10',                \r\n            pin: true,              \r\n            pinSpacing: false,          \r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        gsap.fromTo(\r\n            '.animated-text',\r\n            {\r\n                x: '100%',        \r\n                opacity: 0, \r\n            },\r\n            {\r\n                x: 0,         \r\n                opacity: 1,    \r\n                duration: 6,     \r\n                ease: 'power3.out',\r\n                repeat: 0,       \r\n            }\r\n        );\r\n    }, []);\r\n    \r\n  return (\r\n      <div className='py-12'><p className='text-5xl text-black font-medium text-center animated-text1'>TextAnimation</p>\r\n              <p className='text-4xl text-black max-w-[650px] text-center mx-auto pt-5 animated-text'>Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              </p>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default TextAnimation"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnDH,IAAI,CAACI,cAAc,CAACH,aAAa,CAAC;AAElC,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxBP,SAAS,CAAC,MAAM;IACZ,MAAMQ,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;IACrD,MAAMC,OAAO,GAAGH,IAAI,CAACI,WAAW,CAACC,KAAK,CAAC,EAAE,CAAC;IAC1CL,IAAI,CAACM,SAAS,GAAGH,OAAO,CAACI,GAAG,CAACC,MAAM,IAAI,SAASA,MAAM,SAAS,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IAEzEhB,IAAI,CAACiB,MAAM,CACP,qBAAqB,EACrB;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAClB;MACIA,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAE,GAAG;MACbC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,CAAC,CAAC;MACVC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,SAAAA,CAAA,EAAY;QAClB;QACAvB,IAAI,CAACwB,EAAE,CAAC,qBAAqB,EAAE;UAC3BN,KAAK,EAAEA,CAACO,CAAC,EAAEC,MAAM,KAAK;YAClB,MAAMC,YAAY,GAAGD,MAAM,CAACE,KAAK,CAACV,KAAK;YACvC,IAAIS,YAAY,KAAK,gBAAgB,EAAE;cAAE;cACrC,OAAO,QAAQ;YACnB,CAAC,MAAM,IAAIA,YAAY,KAAK,kBAAkB,EAAE;cAAE;cAC9C,OAAO,OAAO;YAClB,CAAC,MAAM;cACH,OAAO,MAAM,CAAC,CAAC;YACnB;UACJ,CAAC;UACDR,QAAQ,EAAE,GAAG;UACbC,OAAO,EAAE;QACb,CAAC,CAAC;MACN;IAEJ,CACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACNrB,SAAS,CAAC,MAAM;IACZ,MAAMQ,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;IACtD,MAAMC,OAAO,GAAGH,IAAI,CAACI,WAAW,CAACC,KAAK,CAAC,EAAE,CAAC;IAC1CL,IAAI,CAACM,SAAS,GAAGH,OAAO,CAACI,GAAG,CAACC,MAAM,IAAI,SAASA,MAAM,SAAS,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IACzEhB,IAAI,CAACiB,MAAM,CACP,iBAAiB,EACjB;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAClB;MACIA,KAAK,EAAE,KAAK;MACZC,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE,CAAC,CAAC;MACVQ,IAAI,EAAE;IACV,CACJ,CAAC;IACD5B,aAAa,CAAC6B,MAAM,CAAC;MACjBC,OAAO,EAAE,iBAAiB;MAC1BC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,IAAI;MACTC,UAAU,EAAE;IAChB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACNpC,SAAS,CAAC,MAAM;IACZC,IAAI,CAACiB,MAAM,CACP,gBAAgB,EAChB;MACImB,CAAC,EAAE,MAAM;MACTC,OAAO,EAAE;IACb,CAAC,EACD;MACID,CAAC,EAAE,CAAC;MACJC,OAAO,EAAE,CAAC;MACVlB,QAAQ,EAAE,CAAC;MACXmB,IAAI,EAAE,YAAY;MAClBjB,MAAM,EAAE;IACZ,CACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAER,oBACIlB,OAAA;IAAKoC,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAACrC,OAAA;MAAGoC,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1GzC,OAAA;MAAGoC,SAAS,EAAC,0EAA0E;MAAAC,QAAA,EAAC;IACxF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEZ,CAAC;AAAAtC,EAAA,CAlFKD,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AAoFnB,eAAeA,aAAa;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}