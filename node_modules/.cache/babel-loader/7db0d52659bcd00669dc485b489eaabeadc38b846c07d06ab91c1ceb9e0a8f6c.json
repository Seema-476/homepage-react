{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react_folder\\\\homepage-react\\\\src\\\\common\\\\FormValidation.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormValidation = () => {\n  // const formData = {\n  //   Name: \"\",\n  //   Email: \"\",\n  //   Password: \"\",\n  //   ConfirmPassword:\"\",\n  // }\n  // const [formValue, setFormValidation] = useState(formData)\n  // const [errors, setErrors] = useState({});\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target; // Get the name and value from the input field\n  //   setFormValidation((prevFormValue) => ({\n  //     ...prevFormValue,\n  //     [name]: value, // Update the correct field dynamically based on the name\n  //   }));\n  // };\n\n  // const handleClick = (e) => {\n  //   e.preventDefault()\n  //   console.log(formValue);\n  //   const newErrors = {};\n  //   if (!formValue.Name) {\n  //     newErrors.Name = \"Name is required\";\n  //   }\n  //   if (!formValue.Email) {\n  //     newErrors.Email = \"Email is required\";\n  //   }\n  //   if (!formValue.Password) {\n  //     newErrors.Password = \"Password is required\";\n  //   }\n  //   if (formValue.Password !== formValue.ConfirmPassword) {\n  //     newErrors.ConfirmPassword = \"Passwords do not match\";\n  //   }\n\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap flex-row -mx-3 justify-center\",\n      children: MONITOR_CONTROL_CARDS.map((obj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lg:w-[33.33%] sm:w-[50%] w-full px-3 flex justify-center lg:pb-6 pb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sm:max-w-[365px] lg:h-[273px] h-[260px] duration-700 w-full rounded-[22px] py-5 lg:px-7 px-5 bg-blue hover:shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: obj.svgImage,\n            alt: \"svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-inter font-semibold text-2xl lg:pt-8 lg:pb-4 py-3\",\n            children: obj.heading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-inter font-light text-base text-black lg:max-w-[304px]\",\n            children: obj.paragraph\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n\n  // <div className='py-12'>\n  //   <div className='container'>\n  //     <h3 className='font-inter font-semibold text-4xl text-black text-center pb-9'>Form Validation</h3>\n  //     <form onSubmit={handleClick} action=\"\" className='flex flex-col justify-center items-center gap-3'>\n  //       <input onChange={handleChange} value={formValue.Name} type=\"text\" placeholder='Name' className='border border-black p-2 w-96 outline-none rounded' />\n  //       {errors.Name && <div className=\"text-red-500\">{errors.Name}</div>}\n  //       <input type=\"text\" placeholder='Email' className='border border-black p-2 w-96 outline-none rounded' />\n  //       {errors.Email && <div className=\"text-red-500\">{errors.Email}</div>}\n  //       <input type=\"text\" placeholder='Password' className='border border-black p-2 w-96 outline-none rounded' />\n  //       {errors.Password && <div className=\"text-red-500\">{errors.Password}</div>}\n  //       <input type=\"text\" placeholder='Confirm Password' className='border border-black p-2 w-96 outline-none rounded' />\n  //       {errors.ConfirmPassword && <div className=\"text-red-500\">{errors.ConfirmPassword}</div>}\n  //     </form>\n  //     <button type='submit' className='mx-auto'>btn</button>\n  //   </div>\n  // </div>\n  ;\n};\n_c = FormValidation;\nexport default FormValidation;\nvar _c;\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormValidation","className","children","MONITOR_CONTROL_CARDS","map","obj","index","src","svgImage","alt","fileName","_jsxFileName","lineNumber","columnNumber","heading","paragraph","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react_folder/homepage-react/src/common/FormValidation.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nconst FormValidation = () => {\r\n  // const formData = {\r\n  //   Name: \"\",\r\n  //   Email: \"\",\r\n  //   Password: \"\",\r\n  //   ConfirmPassword:\"\",\r\n  // }\r\n  // const [formValue, setFormValidation] = useState(formData)\r\n  // const [errors, setErrors] = useState({});\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target; // Get the name and value from the input field\r\n  //   setFormValidation((prevFormValue) => ({\r\n  //     ...prevFormValue,\r\n  //     [name]: value, // Update the correct field dynamically based on the name\r\n  //   }));\r\n  // };\r\n  \r\n  // const handleClick = (e) => {\r\n  //   e.preventDefault()\r\n  //   console.log(formValue);\r\n  //   const newErrors = {};\r\n  //   if (!formValue.Name) {\r\n  //     newErrors.Name = \"Name is required\";\r\n  //   }\r\n  //   if (!formValue.Email) {\r\n  //     newErrors.Email = \"Email is required\";\r\n  //   }\r\n  //   if (!formValue.Password) {\r\n  //     newErrors.Password = \"Password is required\";\r\n  //   }\r\n  //   if (formValue.Password !== formValue.ConfirmPassword) {\r\n  //     newErrors.ConfirmPassword = \"Passwords do not match\";\r\n  //   }\r\n    \r\n  // }\r\n  return (\r\n    <div className='py-12'>\r\n      <div className='flex flex-wrap flex-row -mx-3 justify-center'>\r\n        {MONITOR_CONTROL_CARDS.map((obj, index) => (\r\n          <div key={index} className='lg:w-[33.33%] sm:w-[50%] w-full px-3 flex justify-center lg:pb-6 pb-5'>\r\n            <div className='sm:max-w-[365px] lg:h-[273px] h-[260px] duration-700 w-full rounded-[22px] py-5 lg:px-7 px-5 bg-blue hover:shadow-lg'>\r\n              <img src={obj.svgImage} alt=\"svg\" />\r\n              <h2 className='font-inter font-semibold text-2xl lg:pt-8 lg:pb-4 py-3'>{obj.heading}</h2>\r\n              <p className='font-inter font-light text-base text-black lg:max-w-[304px]'>{obj.paragraph}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n</div>\r\n\r\n\r\n    // <div className='py-12'>\r\n    //   <div className='container'>\r\n    //     <h3 className='font-inter font-semibold text-4xl text-black text-center pb-9'>Form Validation</h3>\r\n    //     <form onSubmit={handleClick} action=\"\" className='flex flex-col justify-center items-center gap-3'>\r\n    //       <input onChange={handleChange} value={formValue.Name} type=\"text\" placeholder='Name' className='border border-black p-2 w-96 outline-none rounded' />\r\n    //       {errors.Name && <div className=\"text-red-500\">{errors.Name}</div>}\r\n    //       <input type=\"text\" placeholder='Email' className='border border-black p-2 w-96 outline-none rounded' />\r\n    //       {errors.Email && <div className=\"text-red-500\">{errors.Email}</div>}\r\n    //       <input type=\"text\" placeholder='Password' className='border border-black p-2 w-96 outline-none rounded' />\r\n    //       {errors.Password && <div className=\"text-red-500\">{errors.Password}</div>}\r\n    //       <input type=\"text\" placeholder='Confirm Password' className='border border-black p-2 w-96 outline-none rounded' />\r\n    //       {errors.ConfirmPassword && <div className=\"text-red-500\">{errors.ConfirmPassword}</div>}\r\n    //     </form>\r\n    //     <button type='submit' className='mx-auto'>btn</button>\r\n    //   </div>\r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default FormValidation\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACED,OAAA;IAAKE,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBH,OAAA;MAAKE,SAAS,EAAC,8CAA8C;MAAAC,QAAA,EAC1DC,qBAAqB,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACpCP,OAAA;QAAiBE,SAAS,EAAC,uEAAuE;QAAAC,QAAA,eAChGH,OAAA;UAAKE,SAAS,EAAC,sHAAsH;UAAAC,QAAA,gBACnIH,OAAA;YAAKQ,GAAG,EAAEF,GAAG,CAACG,QAAS;YAACC,GAAG,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpCd,OAAA;YAAIE,SAAS,EAAC,wDAAwD;YAAAC,QAAA,EAAEG,GAAG,CAACS;UAAO;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzFd,OAAA;YAAGE,SAAS,EAAC,6DAA6D;YAAAC,QAAA,EAAEG,GAAG,CAACU;UAAS;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3F;MAAC,GALEP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAAG,EAAA,GArEKhB,cAAc;AAuEpB,eAAeA,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}