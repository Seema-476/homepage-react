{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react_folder\\\\homepage-react\\\\src\\\\common\\\\FormValidation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormValidation = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    agree: false,\n    selectColor: '',\n    number: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target; // Get the name and value from the input field\n  //   setFormValidation((prevFormValue) => ({\n  //     ...prevFormValue,\n  //     [name]: value, // Update the correct field dynamically based on the name\n  //   }));\n  // };\n\n  const handleClick = e => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!formValue.Name) {\n      newErrors.Name = \"Name is required\";\n    }\n    if (!formValue.Email) {\n      newErrors.Email = \"Email is required\";\n    }\n    if (!formValue.Password) {\n      newErrors.Password = \"Password is required\";\n    }\n    if (formValue.Password !== formValue.ConfirmPassword) {\n      newErrors.ConfirmPassword = \"Passwords do not match\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-inter font-semibold text-4xl text-black text-center pb-9\",\n        children: \"Form Validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleClick,\n        action: \"\",\n        className: \"flex flex-col justify-center items-center gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setFormValidation({\n            ...formValue,\n            formValue,\n            Name: e.target.value\n          }),\n          value: formValue.Name,\n          type: \"text\",\n          placeholder: \"Name\",\n          className: \"border border-black p-2 w-96 outline-none rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          className: \"border border-black p-2 w-96 outline-none rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          className: \"border border-black p-2 w-96 outline-none rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Confirm Password\",\n          className: \"border border-black p-2 w-96 outline-none rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mx-auto\",\n        children: \"btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(FormValidation, \"PmwsA2uv6BKVIeTLGMD3uyxmF98=\");\n_c = FormValidation;\nexport default FormValidation;\nvar _c;\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FormValidation","_s","formData","setFormData","firstName","lastName","email","password","confirmPassword","agree","selectColor","number","handleChange","e","name","value","type","checked","target","prevData","handleClick","preventDefault","newErrors","formValue","Name","Email","Password","ConfirmPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","action","onChange","setFormValidation","placeholder","errors","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react_folder/homepage-react/src/common/FormValidation.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst FormValidation = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    agree: false,\r\n    selectColor: '',\r\n    number: ''\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target; // Get the name and value from the input field\r\n  //   setFormValidation((prevFormValue) => ({\r\n  //     ...prevFormValue,\r\n  //     [name]: value, // Update the correct field dynamically based on the name\r\n  //   }));\r\n  // };\r\n  \r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    \r\n    const newErrors = {};\r\n    if (!formValue.Name) {\r\n      newErrors.Name = \"Name is required\";\r\n    }\r\n    if (!formValue.Email) {\r\n      newErrors.Email = \"Email is required\";\r\n    }\r\n    if (!formValue.Password) {\r\n      newErrors.Password = \"Password is required\";\r\n    }\r\n    if (formValue.Password !== formValue.ConfirmPassword) {\r\n      newErrors.ConfirmPassword = \"Passwords do not match\";\r\n    }\r\n  }\r\n  return (\r\n    <div className='py-12'>\r\n      <div className='container'>\r\n        <h3 className='font-inter font-semibold text-4xl text-black text-center pb-9'>Form Validation</h3>\r\n        <form onSubmit={handleClick} action=\"\" className='flex flex-col justify-center items-center gap-3'>\r\n          <input onChange={(e)=>setFormValidation({...formValue,formValue,Name:e.target.value})} value={formValue.Name} type=\"text\" placeholder='Name' className='border border-black p-2 w-96 outline-none rounded' />\r\n          {errors.name && <div className=\"text-red-500\">{errors.name}</div>}\r\n          <input type=\"text\" placeholder='Email' className='border border-black p-2 w-96 outline-none rounded' />\r\n          {errors.email && <div className=\"text-red-500\">{errors.email}</div>}\r\n          <input type=\"text\" placeholder='Password' className='border border-black p-2 w-96 outline-none rounded' />\r\n          {errors.password && <div className=\"text-red-500\">{errors.password}</div>}\r\n          <input type=\"text\" placeholder='Confirm Password' className='border border-black p-2 w-96 outline-none rounded' />\r\n          {errors.confirmPassword && <div className=\"text-red-500\">{errors.confirmPassword}</div>}\r\n        </form>\r\n        <button type='submit' className='mx-auto'>btn</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormValidation\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,EAAE;IACnBC,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAE/Cf,WAAW,CAAEgB,QAAQ,KAAM;MACzB,GAAGA,QAAQ;MACX,CAACL,IAAI,GAAGE,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF;IAC1C,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMK,WAAW,GAAIP,CAAC,IAAK;IACzBA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAElB,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,SAAS,CAACC,IAAI,EAAE;MACnBF,SAAS,CAACE,IAAI,GAAG,kBAAkB;IACrC;IACA,IAAI,CAACD,SAAS,CAACE,KAAK,EAAE;MACpBH,SAAS,CAACG,KAAK,GAAG,mBAAmB;IACvC;IACA,IAAI,CAACF,SAAS,CAACG,QAAQ,EAAE;MACvBJ,SAAS,CAACI,QAAQ,GAAG,sBAAsB;IAC7C;IACA,IAAIH,SAAS,CAACG,QAAQ,KAAKH,SAAS,CAACI,eAAe,EAAE;MACpDL,SAAS,CAACK,eAAe,GAAG,wBAAwB;IACtD;EACF,CAAC;EACD,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpB9B,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9B,OAAA;QAAI6B,SAAS,EAAC,+DAA+D;QAAAC,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClGlC,OAAA;QAAMmC,QAAQ,EAAEd,WAAY;QAACe,MAAM,EAAC,EAAE;QAACP,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAChG9B,OAAA;UAAOqC,QAAQ,EAAGvB,CAAC,IAAGwB,iBAAiB,CAAC;YAAC,GAAGd,SAAS;YAACA,SAAS;YAACC,IAAI,EAACX,CAAC,CAACK,MAAM,CAACH;UAAK,CAAC,CAAE;UAACA,KAAK,EAAEQ,SAAS,CAACC,IAAK;UAACR,IAAI,EAAC,MAAM;UAACsB,WAAW,EAAC,MAAM;UAACV,SAAS,EAAC;QAAmD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC5MM,MAAM,CAACzB,IAAI,iBAAIf,OAAA;UAAK6B,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEU,MAAM,CAACzB;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjElC,OAAA;UAAOiB,IAAI,EAAC,MAAM;UAACsB,WAAW,EAAC,OAAO;UAACV,SAAS,EAAC;QAAmD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACtGM,MAAM,CAACjC,KAAK,iBAAIP,OAAA;UAAK6B,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEU,MAAM,CAACjC;QAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnElC,OAAA;UAAOiB,IAAI,EAAC,MAAM;UAACsB,WAAW,EAAC,UAAU;UAACV,SAAS,EAAC;QAAmD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACzGM,MAAM,CAAChC,QAAQ,iBAAIR,OAAA;UAAK6B,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEU,MAAM,CAAChC;QAAQ;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzElC,OAAA;UAAOiB,IAAI,EAAC,MAAM;UAACsB,WAAW,EAAC,kBAAkB;UAACV,SAAS,EAAC;QAAmD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACjHM,MAAM,CAAC/B,eAAe,iBAAIT,OAAA;UAAK6B,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEU,MAAM,CAAC/B;QAAe;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eACPlC,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAACY,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAhC,EAAA,CA/DKD,cAAc;AAAAwC,EAAA,GAAdxC,cAAc;AAiEpB,eAAeA,cAAc;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}