{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react_folder\\\\homepage-react\\\\src\\\\common\\\\PreLoader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Lines } from 'react-preloaders'; // Assuming this is a valid component\nimport YourApp from './YourApp'; // Make sure you import YourApp if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreLoader = () => {\n  _s();\n  const [loading, setLoading] = useState(true); // Define loading state\n\n  useEffect(() => {\n    // Simulate fetching data from an API\n    fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(json => {\n      setLoading(false); // Set loading to false once data is fetched\n    }).catch(err => {\n      setLoading(false); // Set loading to false if there is an error\n    });\n  }, []); // Empty dependency array means this runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Lines, {\n      customLoading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) // Show loading animation\n    : /*#__PURE__*/_jsxDEV(YourApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) // Show the actual app once loading is complete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(PreLoader, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = PreLoader;\nexport default PreLoader;\nvar _c;\n$RefreshReg$(_c, \"PreLoader\");","map":{"version":3,"names":["React","useState","useEffect","Lines","YourApp","jsxDEV","_jsxDEV","PreLoader","_s","loading","setLoading","fetch","then","response","json","catch","err","Fragment","children","customLoading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react_folder/homepage-react/src/common/PreLoader.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Lines } from 'react-preloaders';  // Assuming this is a valid component\r\nimport YourApp from './YourApp';  // Make sure you import YourApp if needed\r\n\r\nconst PreLoader = () => {\r\n    const [loading, setLoading] = useState(true);  // Define loading state\r\n\r\n    useEffect(() => {\r\n        // Simulate fetching data from an API\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setLoading(false);  // Set loading to false once data is fetched\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);  // Set loading to false if there is an error\r\n            });\r\n    }, []);  // Empty dependency array means this runs only once when the component mounts\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {loading ? (\r\n                <Lines customLoading={loading} />  // Show loading animation\r\n            ) : (\r\n                <YourApp />  // Show the actual app once loading is complete\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PreLoader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,kBAAkB,CAAC,CAAE;AAC3C,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE/CC,SAAS,CAAC,MAAM;IACZ;IACAS,KAAK,CAAC,8CAA8C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI;MACVJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACxB,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAI;MACVN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACIJ,OAAA,CAACN,KAAK,CAACiB,QAAQ;IAAAC,QAAA,EACVT,OAAO,gBACJH,OAAA,CAACH,KAAK;MAACgB,aAAa,EAAEV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAE;IAAA,eAEnCjB,OAAA,CAACF,OAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAE;EAChB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEzB,CAAC;AAAAf,EAAA,CAxBKD,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}