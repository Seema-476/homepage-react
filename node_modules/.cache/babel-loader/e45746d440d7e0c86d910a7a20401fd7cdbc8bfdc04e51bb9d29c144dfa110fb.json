{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\react_folder\\\\homepage-react\\\\src\\\\common\\\\Gsap.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport gsap from 'gsap';\nimport { useGSAP } from '@gsap/react';\ngsap.registerPlugin(useGSAP);\n// import { ScrollTrigger } from 'gsap/ScrollTrigger';\nimport { SplitText } from 'gsap/SplitText';\n// let split, tl;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gsap = () => {\n  _s();\n  const {\n    contextSafe\n  } = useGSAP();\n  const spin = contextSafe(({\n    currentTarget\n  }) => {\n    gsap.to(currentTarget, {\n      rotation: \"+=90\",\n      repeat: 1,\n      x: 100,\n      duration: 1,\n      ease: 'elastic.out'\n    });\n    gsap.to(currentTarget, {\n      rotation: \"+=360\",\n      x: 100,\n      duration: 1\n    });\n    gsap.to(currentTarget, {\n      rotation: \"+=360\",\n      x: 100,\n      duration: 1\n    });\n    // gsap.from(currentTarget, { rotation: \"-=360\", });\n  });\n  split && split.revert();\n  tl && tl.revert();\n  split = new SplitText(\".wrapper p\", {\n    type: \"chars\"\n  });\n  tl = gsap.timeline({\n    scrollTrigger: {\n      trigger: \"#textSection\",\n      start: \"top top\",\n      end: \"+=150%\",\n      pin: true,\n      scrub: 0.75,\n      markers: true\n    }\n  }).set(split.chars, {\n    color: \"#ffcc66\",\n    stagger: 0.1\n  }, 0.1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-12 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-inter font-semibold text-4xl text-black text-center pb-9\",\n        children: \"Gsap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box bg-black max-w-[100px] h-20 flex justify-center items-center rounded mx-auto text-white\",\n        onClick: spin,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-medium max-w-[600px] mx-auto\",\n          children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus deleniti praesentium veritatis. Perspiciatis sint molestias et corrupti, quasi provident earum!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Gsap, \"smdQaBHuw+eafeisKK2a9kHtGXU=\", false, function () {\n  return [useGSAP];\n});\n_c = Gsap;\nexport default Gsap;\nvar _c;\n$RefreshReg$(_c, \"Gsap\");","map":{"version":3,"names":["React","gsap","useGSAP","registerPlugin","SplitText","jsxDEV","_jsxDEV","Gsap","_s","contextSafe","spin","currentTarget","to","rotation","repeat","x","duration","ease","split","revert","tl","type","timeline","scrollTrigger","trigger","start","end","pin","scrub","markers","set","chars","color","stagger","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/react_folder/homepage-react/src/common/Gsap.jsx"],"sourcesContent":["import React from 'react'\r\nimport gsap from 'gsap'\r\nimport { useGSAP } from '@gsap/react';\r\ngsap.registerPlugin(useGSAP);\r\n// import { ScrollTrigger } from 'gsap/ScrollTrigger';\r\nimport { SplitText } from 'gsap/SplitText';\r\n// let split, tl;\r\n\r\n\r\nconst Gsap = () => {\r\n    const { contextSafe } = useGSAP();\r\n    const spin = contextSafe(({ currentTarget }) => {\r\n        gsap.to(currentTarget, { rotation: \"+=90\", repeat: 1, x: 100, duration: 1, ease: 'elastic.out' });\r\n        gsap.to(currentTarget, { rotation: \"+=360\", x: 100, duration: 1 });\r\n        gsap.to(currentTarget, { rotation: \"+=360\", x: 100, duration: 1 });\r\n        // gsap.from(currentTarget, { rotation: \"-=360\", });\r\n    });\r\n    split && split.revert();\r\n    tl && tl.revert();\r\n    split = new SplitText(\".wrapper p\", {\r\n        type: \"chars\"\r\n    });\r\n    tl = gsap\r\n        .timeline({\r\n            scrollTrigger: {\r\n                trigger: \"#textSection\",\r\n                start: \"top top\",\r\n                end: \"+=150%\",\r\n                pin: true,\r\n                scrub: 0.75,\r\n                markers: true\r\n            }\r\n        })\r\n        .set(\r\n            split.chars,\r\n            {\r\n                color: \"#ffcc66\",\r\n                stagger: 0.1\r\n            },\r\n            0.1\r\n        );\r\n    return (\r\n        <div className='py-12 overflow-hidden'>\r\n            <div className='container'>\r\n                <h3 className='font-inter font-semibold text-4xl text-black text-center pb-9'>Gsap</h3>\r\n                <div className=\"box bg-black max-w-[100px] h-20 flex justify-center items-center rounded mx-auto text-white\" onClick={spin}>Click me\r\n                </div>\r\n                <div>\r\n                    <p className='text-2xl font-medium max-w-[600px] mx-auto'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ducimus deleniti praesentium veritatis. Perspiciatis sint molestias et corrupti, quasi provident earum!</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gsap\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}